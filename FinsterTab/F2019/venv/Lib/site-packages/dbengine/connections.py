import pymysql
import sqlite3


class DBEngine:
    def __init__(self, connection):
        # opening db connection
        self.con = connection
        self.cur = self.con.cursor()

    @classmethod
    def mysql(cls, user, password, database, host='localhost', port=3306):
        # connect to MySQL server
        credentials = {
            'host': host,
            'port': port,
            'user': user,
            'password': password,
            'db': database,
            'charset': 'utf8mb4',
            'autocommit': True,
            'cursorclass': pymysql.cursors.DictCursor}
        global driver
        driver = ''  # optional
        connection = pymysql.connect(**credentials)
        return cls(connection)

    @classmethod
    def sqlite(cls, database):
        # connect to sqlite file
        global driver
        driver = 'sqlite'
        connection = sqlite3.connect(database)
        return cls(connection)

    @property
    def d(self):
        # holds query statement and its value (if available)
        return self.query, self.value

    def read(self, bulk=False):
        # transaction: SELECT
        self.cur.execute(*self.d)
        if driver == 'sqlite':
            column = [c[0] for c in self.cur.description]
            data = self.cur.fetchall() if bulk else self.cur.fetchone()
            if data:
                if bulk:
                    return [dict(zip(column, row)) for row in data]
                return dict(zip(column, data))
            return []
        return self.cur.fetchall() if bulk else self.cur.fetchone()

    def write(self, bulk=False):
        # transaction: CREATE, INSERT, DELETE, UPDATE
        self.cur.executemany(*self.d) if bulk else self.cur.execute(*self.d)
        self.con.commit()
        return self.cur.lastrowid

    def __del__(self):
        # closing db connection
        self.con.close()
