Metadata-Version: 2.1
Name: dbengine
Version: 1.1
Summary: Database Abstraction Layer for MySQL and SQLite3
Home-page: https://github.com/maulasjoumaico/dbengine
Author: Joumaico Maulas
Author-email: maulasjoumaico@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: pymysql (>=0.9.3)

# DBEngine

<b>Description</b>

Database Abstraction Layer for MySQL and SQLite3

<b>Installation</b>

 	pip install dbengine

<b>Example</b>

To create connection for SQLite3

	sqlite = DBEngine.sqlite(':memory:')  # ':memory:' or 'filename.db'

and for MySQL server

	mysql = DBEngine.mysql(host=str,port=int,user=str,password=str,database=str)

To create table named <b>users</b>

	sqlite.query = 'CREATE TABLE users (first_name STRING, last_name STRING)'
	sqlite.value = ()  # empty tuple if no arguments
	sqlite.write()

To insert single item: if database is MySQL use placeholder `%s` instead of `?`

	sqlite.query = 'INSERT INTO users VALUES (?,?)'
	sqlite.value = 'Taylor', 'Swift'
	print('id:', sqlite.write())

To insert multiple items

	sqlite.query = 'INSERT INTO users VALUES (?,?)'
	sqlite.value = [('Rihanna', ''), ('Bruno', 'Mars'), ('Adele', '')]
	sqlite.write(bulk=True)

To select single item

	sqlite.query = 'SELECT * FROM users WHERE last_name = ?'
	sqlite.value = 'Mars',  # a tuple containing a single value must include a comma
	print('single-select:', sqlite.read())

To select multiple items

	sqlite.query = 'SELECT * FROM users WHERE last_name IS ?'
	sqlite.value = '',
	print('multi-select:', sqlite.read(bulk=True))


